"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[306],{41076:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>o});var e=a(20641);const p={},t=(0,a(66262).A)(p,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="abx-manager-websocket" tabindex="-1"><a class="header-anchor" href="#abx-manager-websocket"><span>abx-manager-websocket</span></a></h1><blockquote><p>abx 内 socket 通讯插件</p></blockquote><h2 id="_1-引入" tabindex="-1"><a class="header-anchor" href="#_1-引入"><span>1. 引入</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ServeManager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;abx-manager-websocket&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用"><span>2. 使用</span></a></h2><h3 id="_2-1-factory" tabindex="-1"><a class="header-anchor" href="#_2-1-factory"><span>2.1 factory</span></a></h3><p>socket 连接的单例,未连接则新建,已连接则返回已创建的连接.</p><p><strong>参数:</strong></p><p><em>options(Object)</em>: 初始化 socket 连接所需的参数,包括服务地址、客户端唯一 id、客户端信息、发送一次心跳请求的间隔时间、没收到后端消息便会认为连接断开的时间、ping消息内容、尝试重连的间隔时间、最大重连次数</p><p><strong>返回:</strong></p><p>无返回值</p><p><strong>例子:</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> options <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">messageUrl</span><span class="token operator">:</span> <span class="token string">&quot;ws://......&quot;</span><span class="token punctuation">,</span> <span class="token comment">// socket 远程地址</span></span>\n<span class="line">  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 唯一 ID</span></span>\n<span class="line">  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">app</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">branch</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">corporation</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 客户端信息, 包含 app、branch、corporation 信息</span></span>\n<span class="line">  <span class="token literal-property property">pingTimeOut</span><span class="token operator">:</span> <span class="token number">15000</span><span class="token punctuation">,</span> <span class="token comment">// 每隔 pingTimeOut 毫秒发送一条心跳请求，默认15秒</span></span>\n<span class="line">  <span class="token literal-property property">pongTimeOut</span><span class="token operator">:</span> <span class="token number">8000</span><span class="token punctuation">,</span> <span class="token comment">// 最长未接收消息的间隔，在心跳请求发送 pongTimeOut 毫秒内未收到响应关闭连接，默认8秒</span></span>\n<span class="line">  <span class="token literal-property property">pingMsg</span><span class="token operator">:</span> <span class="token string">&quot;heartbeat&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 心跳消息内容</span></span>\n<span class="line">  <span class="token literal-property property">reconnectLimit</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// 最大重连次数，默认 1000</span></span>\n<span class="line">  <span class="token literal-property property">reconnectTimeOut</span><span class="token operator">:</span> <span class="token number">5000</span> <span class="token comment">// 发起重连的间隔，默认5秒</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">ServeManager<span class="token punctuation">.</span><span class="token function">factory</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>初始化时触发</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">ServeManager<span class="token punctuation">.</span><span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token comment">// TODO</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>连接建立时触发</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">ServeManager<span class="token punctuation">.</span><span class="token function-variable function">onopen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token comment">// TODO</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>客户端接收服务端数据时触发</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">ServeManager<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">onmessage: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>e<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>通信发生错误时触发</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">ServeManager<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">onerror: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>e<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>连接关闭时触发</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">ServeManager<span class="token punctuation">.</span><span class="token function-variable function">onclose</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;close...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>发生重连触发</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">ServeManager<span class="token punctuation">.</span><span class="token function-variable function">onreconnect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;reconnecting...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',25)]))}]]),o=JSON.parse('{"path":"/ABX5/%E5%89%8D%E7%AB%AF/sdk/abx-manager-websocket.html","title":"abx-manager-websocket","lang":"en-US","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"1. 引入","slug":"_1-引入","link":"#_1-引入","children":[]},{"level":2,"title":"2. 使用","slug":"_2-使用","link":"#_2-使用","children":[{"level":3,"title":"2.1 factory","slug":"_2-1-factory","link":"#_2-1-factory","children":[]}]}],"git":{"updatedTime":1727145923000,"contributors":[{"name":"wangaoqi","email":"wangaoqi@agree.com.cn","commits":1}]},"filePathRelative":"ABX5/前端/sdk/abx-manager-websocket.md"}')}}]);