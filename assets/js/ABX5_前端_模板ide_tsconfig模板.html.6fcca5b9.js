"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[8748],{36310:(s,n,a)=>{a.r(n),a.d(n,{comp:()=>o,data:()=>p});var e=a(20641);const t={},o=(0,a(66262).A)(t,[["render",function(s,n){return(0,e.uX)(),(0,e.CE)("div",null,n[0]||(n[0]=[(0,e.Fv)('<h1 id="tsconfig-模板" tabindex="-1"><a class="header-anchor" href="#tsconfig-模板"><span>tsconfig 模板</span></a></h1><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;../tsconfig.json&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">/* Visit https://aka.ms/tsconfig.json to read more about this file */</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">/* Basic Options */</span></span>\n<span class="line">    <span class="token comment">// &quot;incremental&quot;: true,                         /* Enable incremental compilation */</span></span>\n<span class="line">    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es6&quot;</span><span class="token punctuation">,</span>                             <span class="token comment">/* Specify ECMAScript target version: &#39;ES3&#39; (default), &#39;ES5&#39;, &#39;ES2015&#39;, &#39;ES2016&#39;, &#39;ES2017&#39;, &#39;ES2018&#39;, &#39;ES2019&#39;, &#39;ES2020&#39;, &#39;ES2021&#39;, or &#39;ESNEXT&#39;. */</span></span>\n<span class="line">    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ES6&quot;</span><span class="token punctuation">,</span>                             <span class="token comment">/* Specify module code generation: &#39;none&#39;, &#39;commonjs&#39;, &#39;amd&#39;, &#39;system&#39;, &#39;umd&#39;, &#39;es2015&#39;, &#39;es2020&#39;, or &#39;ESNext&#39;. */</span></span>\n<span class="line">    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;es6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token comment">/* Specify library files to be included in the compilation. */</span></span>\n<span class="line">    <span class="token property">&quot;allowJs&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                            <span class="token comment">/* Allow javascript files to be compiled. */</span></span>\n<span class="line">    <span class="token comment">// &quot;checkJs&quot;: true,                             /* Report errors in .js files. */</span></span>\n<span class="line">    <span class="token property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;preserve&quot;</span><span class="token punctuation">,</span>                           <span class="token comment">/* Specify JSX code generation: &#39;preserve&#39;, &#39;react-native&#39;, &#39;react&#39;, &#39;react-jsx&#39; or &#39;react-jsxdev&#39;. */</span></span>\n<span class="line">    <span class="token comment">// &quot;declaration&quot;: true,                        /* Generates corresponding &#39;.d.ts&#39; file. */</span></span>\n<span class="line">    <span class="token comment">// &quot;declarationMap&quot;: true,                      /* Generates a sourcemap for each corresponding &#39;.d.ts&#39; file. */</span></span>\n<span class="line">    <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                          <span class="token comment">/* Generates corresponding &#39;.map&#39; file. */</span></span>\n<span class="line">    <span class="token comment">// &quot;outFile&quot;: &quot;./&quot;,                             /* Concatenate and emit output to single file. */</span></span>\n<span class="line">    <span class="token comment">// &quot;outDir&quot;: &quot;./dist&quot;,                          /* Redirect output structure to the directory. */</span></span>\n<span class="line">    <span class="token comment">// &quot;rootDir&quot;: &quot;./src&quot;,                          /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */</span></span>\n<span class="line">    <span class="token comment">// &quot;composite&quot;: true,                           /* Enable project compilation */</span></span>\n<span class="line">    <span class="token comment">// &quot;tsBuildInfoFile&quot;: &quot;./&quot;,                     /* Specify file to store incremental compilation information */</span></span>\n<span class="line">    <span class="token property">&quot;removeComments&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                     <span class="token comment">/* Do not emit comments to output. */</span></span>\n<span class="line">    <span class="token property">&quot;noEmit&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                              <span class="token comment">/* Do not emit outputs. */</span></span>\n<span class="line">    <span class="token comment">// &quot;importHelpers&quot;: true,                       /* Import emit helpers from &#39;tslib&#39;. */</span></span>\n<span class="line">    <span class="token comment">// &quot;downlevelIteration&quot;: true,                  /* Provide full support for iterables in &#39;for-of&#39;, spread, and destructuring when targeting &#39;ES5&#39; or &#39;ES3&#39;. */</span></span>\n<span class="line">    <span class="token comment">// &quot;isolatedModules&quot;: true,                     /* Transpile each file as a separate module (similar to &#39;ts.transpileModule&#39;). */</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">/* Strict Type-Checking Options */</span></span>\n<span class="line">    <span class="token comment">// &quot;strict&quot;: true,                              /* Enable all strict type-checking options. */</span></span>\n<span class="line">    <span class="token comment">// &quot;noImplicitAny&quot;: true,                       /* Raise error on expressions and declarations with an implied &#39;any&#39; type. */</span></span>\n<span class="line">    <span class="token comment">// &quot;strictNullChecks&quot;: true,                    /* Enable strict null checks. */</span></span>\n<span class="line">    <span class="token property">&quot;strictFunctionTypes&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                 <span class="token comment">/* Enable strict checking of function types. */</span></span>\n<span class="line">    <span class="token comment">// &quot;strictBindCallApply&quot;: true,                 /* Enable strict &#39;bind&#39;, &#39;call&#39;, and &#39;apply&#39; methods on functions. */</span></span>\n<span class="line">    <span class="token comment">// &quot;strictPropertyInitialization&quot;: true,        /* Enable strict checking of property initialization in classes. */</span></span>\n<span class="line">    <span class="token comment">// &quot;noImplicitThis&quot;: true,                      /* Raise error on &#39;this&#39; expressions with an implied &#39;any&#39; type. */</span></span>\n<span class="line">    <span class="token property">&quot;alwaysStrict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                        <span class="token comment">/* Parse in strict mode and emit &quot;use strict&quot; for each source file. */</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">/* Additional Checks */</span></span>\n<span class="line">    <span class="token property">&quot;noUnusedLocals&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                      <span class="token comment">/* Report errors on unused locals. */</span></span>\n<span class="line">    <span class="token property">&quot;noUnusedParameters&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                  <span class="token comment">/* Report errors on unused parameters. */</span></span>\n<span class="line">    <span class="token property">&quot;noImplicitReturns&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                   <span class="token comment">/* Report error when not all code paths in function return a value. */</span></span>\n<span class="line">    <span class="token comment">// &quot;noFallthroughCasesInSwitch&quot;: true,          /* Report errors for fallthrough cases in switch statement. */</span></span>\n<span class="line">    <span class="token comment">// &quot;noUncheckedIndexedAccess&quot;: true,            /* Include &#39;undefined&#39; in index signature results */</span></span>\n<span class="line">    <span class="token comment">// &quot;noImplicitOverride&quot;: true,                  /* Ensure overriding members in derived classes are marked with an &#39;override&#39; modifier. */</span></span>\n<span class="line">    <span class="token comment">// &quot;noPropertyAccessFromIndexSignature&quot;: true,  /* Require undeclared properties from index signatures to use element accesses. */</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">/* Module Resolution Options */</span></span>\n<span class="line">    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>                  <span class="token comment">/* Specify module resolution strategy: &#39;node&#39; (Node.js) or &#39;classic&#39; (TypeScript pre-1.6). */</span></span>\n<span class="line">    <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>                              <span class="token comment">/* Base directory to resolve non-absolute module names. */</span></span>\n<span class="line">    <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                 <span class="token comment">/* A series of entries which re-map imports to lookup locations relative to the &#39;baseUrl&#39;. */</span></span>\n<span class="line">    <span class="token comment">// &quot;rootDirs&quot;: [],                              /* List of root folders whose combined content represents the structure of the project at runtime. */</span></span>\n<span class="line">    <span class="token comment">// &quot;typeRoots&quot;: [],                             /* List of folders to include type definitions from. */</span></span>\n<span class="line">    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                 <span class="token comment">/* Type declaration files to be included in compilation. */</span></span>\n<span class="line">    <span class="token property">&quot;allowSyntheticDefaultImports&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">/* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */</span></span>\n<span class="line">    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                     <span class="token comment">/* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies &#39;allowSyntheticDefaultImports&#39;. */</span></span>\n<span class="line">    <span class="token comment">// &quot;preserveSymlinks&quot;: true,                    /* Do not resolve the real path of symlinks. */</span></span>\n<span class="line">    <span class="token comment">// &quot;allowUmdGlobalAccess&quot;: true,                /* Allow accessing UMD globals from modules. */</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">/* Source Map Options */</span></span>\n<span class="line">    <span class="token comment">// &quot;sourceRoot&quot;: &quot;&quot;,                            /* Specify the location where debugger should locate TypeScript files instead of source locations. */</span></span>\n<span class="line">    <span class="token comment">// &quot;mapRoot&quot;: &quot;&quot;,                               /* Specify the location where debugger should locate map files instead of generated locations. */</span></span>\n<span class="line">    <span class="token comment">// &quot;inlineSourceMap&quot;: true,                     /* Emit a single file with source maps instead of having a separate file. */</span></span>\n<span class="line">    <span class="token comment">// &quot;inlineSources&quot;: true,                       /* Emit the source alongside the sourcemaps within a single file; requires &#39;--inlineSourceMap&#39; or &#39;--sourceMap&#39; to be set. */</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">/* Experimental Options */</span></span>\n<span class="line">    <span class="token property">&quot;experimentalDecorators&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>              <span class="token comment">/* Enables experimental support for ES7 decorators. */</span></span>\n<span class="line">    <span class="token comment">// &quot;emitDecoratorMetadata&quot;: true,               /* Enables experimental support for emitting type metadata for decorators. */</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">/* Advanced Options */</span></span>\n<span class="line">    <span class="token comment">// &quot;skipLibCheck&quot;: true,                           /* Skip type checking of declaration files. */</span></span>\n<span class="line">    <span class="token comment">// &quot;forceConsistentCasingInFileNames&quot;: true        /* Disallow inconsistently-cased references to the same file. */</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token property">&quot;preserveConstEnums&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">    <span class="token string">&quot;**/**/*.ts&quot;</span></span>\n<span class="line">  <span class="token punctuation">]</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2)]))}]]),p=JSON.parse('{"path":"/ABX5/%E5%89%8D%E7%AB%AF/%E6%A8%A1%E6%9D%BFide/tsconfig%E6%A8%A1%E6%9D%BF.html","title":"tsconfig 模板","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1727145923000,"contributors":[{"name":"wangaoqi","email":"wangaoqi@agree.com.cn","commits":1}]},"filePathRelative":"ABX5/前端/模板ide/tsconfig模板.md"}')}}]);