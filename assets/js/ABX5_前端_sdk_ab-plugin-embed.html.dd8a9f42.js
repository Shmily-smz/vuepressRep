"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[1914],{28545:(t,s,n)=>{n.r(s),n.d(s,{comp:()=>l,data:()=>d});var a=n(20641);const e={},l=(0,n(66262).A)(e,[["render",function(t,s){const n=(0,a.g2)("font");return(0,a.uX)(),(0,a.CE)("div",null,[s[90]||(s[90]=(0,a.Fv)('<h1 id="ab-plugin-embed-前端内嵌类组件" tabindex="-1"><a class="header-anchor" href="#ab-plugin-embed-前端内嵌类组件"><span>ab-plugin-embed @前端内嵌类组件</span></a></h1><h2 id="_1-引入" tabindex="-1"><a class="header-anchor" href="#_1-引入"><span>1. 引入</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> CefBrowser <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@agree/ab-plugin-embed&quot;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MfcIe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@agree/ab-plugin-embed&quot;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> OleIe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@agree/ab-plugin-embed&quot;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> OleFrame <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@agree/ab-plugin-embed&quot;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MfcOcx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@agree/ab-plugin-embed&quot;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Embed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@agree/ab-plugin-embed&quot;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用"><span>2. 使用</span></a></h2><h2 id="embed" tabindex="-1"><a class="header-anchor" href="#embed"><span>Embed</span></a></h2><h3 id="_2-1-creatembedframe-76版创建内嵌画面" tabindex="-1"><a class="header-anchor" href="#_2-1-creatembedframe-76版创建内嵌画面"><span>2.1 creatEmbedFrame --76版创建内嵌画面</span></a></h3>',6)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[0]||(s[0]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[91]||(s[91]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>pub<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> intersectionSize <span class="token operator">=</span> <span class="token punctuation">{</span> </span>\n<span class="line">        <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">500</span> </span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> actualSize <span class="token operator">=</span> <span class="token punctuation">{</span> </span>\n<span class="line">        <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">500</span> </span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> path  <span class="token operator">=</span> <span class="token string">&quot;EMBED&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> actualSize2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>actualSize<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> intersectionSize2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>intersectionSize<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Embed<span class="token punctuation">.</span><span class="token function">creatEmbedFrame</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span>path<span class="token punctuation">,</span>intersectionSize2<span class="token punctuation">,</span>actualSize2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>intersectionSize</td><td>string</td><td>√</td><td>x</td><td>内嵌形成的外围画布的坐标和大小</td></tr><tr><td>actualSize</td><td>string</td><td>√</td><td>x</td><td>内嵌的窗体的坐标和大小</td></tr><tr><td>path</td><td>string</td><td>√</td><td>x</td><td>内嵌对象的标识ID</td></tr><tr><td>handle</td><td>string</td><td>√</td><td>x</td><td>需要内嵌的窗口的句柄</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>true代表内嵌成功false代表内嵌失败</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[1]||(s[1]=[(0,a.eW)("对应柜面原SDK: EMBED.creatEmbedFrame(handle,path,intersectionSize2,actualSize2)")]))),_:1})]),s[92]||(s[92]=(0,a.Lk)("hr",null,null,-1)),s[93]||(s[93]=(0,a.Lk)("h3",{id:"_2-2-embeddedrefresh-刷新内嵌画面的大小和位置",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-2-embeddedrefresh-刷新内嵌画面的大小和位置"},[(0,a.Lk)("span",null,"2.2 embeddedRefresh --刷新内嵌画面的大小和位置")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[2]||(s[2]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[94]||(s[94]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> intersectionSize <span class="token operator">=</span> <span class="token punctuation">{</span> </span>\n<span class="line">        <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">500</span> </span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> actualSize <span class="token operator">=</span> <span class="token punctuation">{</span> </span>\n<span class="line">        <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">500</span> </span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> path  <span class="token operator">=</span> <span class="token string">&quot;EMBED&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> actualSize2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>actualSize<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> intersectionSize2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>intersectionSize<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Embed<span class="token punctuation">.</span><span class="token function">embeddedRefresh</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>intersectionSize2<span class="token punctuation">,</span>actualSize2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>intersectionSize</td><td>string</td><td>√</td><td>x</td><td>内嵌形成的外围画布的坐标和大小</td></tr><tr><td>actualSize</td><td>string</td><td>√</td><td>x</td><td>内嵌的窗体的坐标和大小</td></tr><tr><td>path</td><td>string</td><td>√</td><td>x</td><td>内嵌对象的标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>内嵌画面刷新的返回值</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[3]||(s[3]=[(0,a.eW)("对应柜面原SDK: EMBED.embeddedRefresh(path,intersectionSize2,actualSize2)")]))),_:1})]),s[95]||(s[95]=(0,a.Lk)("hr",null,null,-1)),s[96]||(s[96]=(0,a.Lk)("h3",{id:"_2-3-embeddeddestroy-销毁指定的内嵌画面",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-3-embeddeddestroy-销毁指定的内嵌画面"},[(0,a.Lk)("span",null,"2.3 embeddedDestroy --销毁指定的内嵌画面")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[4]||(s[4]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[97]||(s[97]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> path  <span class="token operator">=</span> <span class="token string">&quot;EMBED&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//标识ID</span></span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Embed<span class="token punctuation">.</span><span class="token function">embeddedDestroy</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>path</td><td>string</td><td>√</td><td>x</td><td>内嵌对象的标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>success代表销毁成功，fail代表销毁失败。</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[5]||(s[5]=[(0,a.eW)("对应柜面原SDK: EMBED.embeddedDestroy(path)")]))),_:1})]),s[98]||(s[98]=(0,a.Lk)("hr",null,null,-1)),s[99]||(s[99]=(0,a.Lk)("h3",{id:"_2-4-embeddedvisible-显示指定内嵌画面",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-4-embeddedvisible-显示指定内嵌画面"},[(0,a.Lk)("span",null,"2.4 embeddedVisible --显示指定内嵌画面")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[6]||(s[6]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[100]||(s[100]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> path  <span class="token operator">=</span> <span class="token string">&quot;EMBED&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Embed<span class="token punctuation">.</span><span class="token function">embeddedVisible</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>path</td><td>string</td><td>√</td><td>x</td><td>内嵌对象的标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>显示内嵌画面的返回值</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[7]||(s[7]=[(0,a.eW)("对应柜面原SDK: EMBED.embeddedVisible(path)")]))),_:1})]),s[101]||(s[101]=(0,a.Lk)("hr",null,null,-1)),s[102]||(s[102]=(0,a.Lk)("h3",{id:"_2-5-embedvisiblescreenshot-隐藏对应的内嵌画面",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-5-embedvisiblescreenshot-隐藏对应的内嵌画面"},[(0,a.Lk)("span",null,"2.5 embedVisibleScreenshot --隐藏对应的内嵌画面")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[8]||(s[8]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[103]||(s[103]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> path  <span class="token operator">=</span> <span class="token string">&quot;EMBED&quot;</span><span class="token punctuation">;</span>  </span>\n<span class="line"><span class="token keyword">let</span> visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> </span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Embed<span class="token punctuation">.</span><span class="token function">embedVisibleScreenshot</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>visible<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>path</td><td>string</td><td>√</td><td>x</td><td>内嵌对象的标识ID</td></tr><tr><td>visible</td><td>Boolean</td><td>√</td><td>x</td><td>是否需要返回内嵌画面截图的base64字符串</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>执行结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[9]||(s[9]=[(0,a.eW)("对应柜面原SDK: EMBED.embedVisibleScreenshot(path,visible)")]))),_:1})]),s[104]||(s[104]=(0,a.Lk)("hr",null,null,-1)),s[105]||(s[105]=(0,a.Lk)("h3",{id:"_2-6-getvisiblestatus-获取内嵌窗体的状态",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-6-getvisiblestatus-获取内嵌窗体的状态"},[(0,a.Lk)("span",null,"2.6 getVisibleStatus --获取内嵌窗体的状态")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[10]||(s[10]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[106]||(s[106]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> path  <span class="token operator">=</span> <span class="token string">&quot;EMBED&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//标识ID</span></span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Embed<span class="token punctuation">.</span><span class="token function">getVisibleStatus</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>path</td><td>string</td><td>√</td><td>x</td><td>内嵌对象的标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>执行结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[11]||(s[11]=[(0,a.eW)("对应柜面原SDK:EMBED.getVisibleStatus(path)")]))),_:1})]),s[107]||(s[107]=(0,a.Lk)("hr",null,null,-1)),s[108]||(s[108]=(0,a.Lk)("h3",{id:"_2-7-hidewindow-隐藏传入句柄对应的窗口",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-7-hidewindow-隐藏传入句柄对应的窗口"},[(0,a.Lk)("span",null,"2.7 HideWindow --隐藏传入句柄对应的窗口")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[12]||(s[12]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[109]||(s[109]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> handle  <span class="token operator">=</span> <span class="token string">&quot;00020808&quot;</span><span class="token punctuation">;</span> </span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Embed<span class="token punctuation">.</span><span class="token function">HideWindow</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>handle</td><td>string</td><td>√</td><td>x</td><td>窗口的句柄</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>执行结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[13]||(s[13]=[(0,a.eW)("对应柜面原SDK: EMBED.HideWindow(handle)")]))),_:1})]),s[110]||(s[110]=(0,a.Lk)("hr",null,null,-1)),s[111]||(s[111]=(0,a.Lk)("h3",{id:"_2-8-screenshoot-内嵌截图",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-8-screenshoot-内嵌截图"},[(0,a.Lk)("span",null,"2.8 screenShoot --内嵌截图")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[14]||(s[14]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[112]||(s[112]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id  <span class="token operator">=</span> <span class="token string">&quot;EMBED&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//内嵌对象的标识ID</span></span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Embed<span class="token punctuation">.</span><span class="token function">screenShoot</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>内嵌对象的标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>执行结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[15]||(s[15]=[(0,a.eW)("对应柜面原SDK: EMBED.screenShoot(id)")]))),_:1})]),s[113]||(s[113]=(0,a.Lk)("hr",null,null,-1)),s[114]||(s[114]=(0,a.Lk)("p",null,"MfcIe",-1)),s[115]||(s[115]=(0,a.Lk)("h3",{id:"_2-9-init-发送请求初始化",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-9-init-发送请求初始化"},[(0,a.Lk)("span",null,"2.9 init --发送请求初始化")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[16]||(s[16]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[116]||(s[116]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">initMfcIE</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功标识</td></tr><tr><td>res.msg</td><td>string</td><td>返回句柄</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[17]||(s[17]=[(0,a.eW)("对应柜面原SDK: MFC_IE.initMfcIE(id)")]))),_:1})]),s[117]||(s[117]=(0,a.Lk)("hr",null,null,-1)),s[118]||(s[118]=(0,a.Lk)("h3",{id:"_2-10-refreshurl-网页刷新",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-10-refreshurl-网页刷新"},[(0,a.Lk)("span",null,"2.10 refreshUrl --网页刷新")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[18]||(s[18]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[119]||(s[119]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">refreshUrl</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[19]||(s[19]=[(0,a.eW)("对应柜面原SDK: MFC_IE.refreshUrl(id)")]))),_:1})]),s[120]||(s[120]=(0,a.Lk)("hr",null,null,-1)),s[121]||(s[121]=(0,a.Lk)("h3",{id:"_2-11-getlocationurl-获取当前浏览器url地址",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-11-getlocationurl-获取当前浏览器url地址"},[(0,a.Lk)("span",null,"2.11 getLocationURL --获取当前浏览器url地址")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[20]||(s[20]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[122]||(s[122]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">getLocationURL</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功标识</td></tr><tr><td>res.msg</td><td>string</td><td>返回url地址</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[21]||(s[21]=[(0,a.eW)("对应柜面原SDK: MFC_IE.getLocationURL(id)")]))),_:1})]),s[123]||(s[123]=(0,a.Lk)("hr",null,null,-1)),s[124]||(s[124]=(0,a.Lk)("h3",{id:"_2-12-setsilent-设置ie是否禁用警告窗口",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-12-setsilent-设置ie是否禁用警告窗口"},[(0,a.Lk)("span",null,"2.12 setSilent --设置ie是否禁用警告窗口")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[22]||(s[22]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[125]||(s[125]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> silent <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">//是否禁用标识S</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">setSilent</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>silent<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr><tr><td>silent</td><td>string</td><td>√</td><td>x</td><td>是否禁用标识S</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[23]||(s[23]=[(0,a.eW)("对应柜面原SDK:MFC_IE.setSilent(id,silent)")]))),_:1})]),s[126]||(s[126]=(0,a.Lk)("hr",null,null,-1)),s[127]||(s[127]=(0,a.Lk)("h3",{id:"_2-13-seturl-设置ie浏览器地址",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-13-seturl-设置ie浏览器地址"},[(0,a.Lk)("span",null,"2.13 setUrl --设置ie浏览器地址")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[24]||(s[24]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[128]||(s[128]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&quot;http://www.baidu.com/&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//访问地址</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr><tr><td>url</td><td>string</td><td>√</td><td>x</td><td>访问地址</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[25]||(s[25]=[(0,a.eW)("对应柜面原SDK: MFC_IE.setUrl(id,url)")]))),_:1})]),s[129]||(s[129]=(0,a.Lk)("hr",null,null,-1)),s[130]||(s[130]=(0,a.Lk)("h3",{id:"_2-14-execute-执行浏览器脚本",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-14-execute-执行浏览器脚本"},[(0,a.Lk)("span",null,"2.14 execute --执行浏览器脚本")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[26]||(s[26]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[131]||(s[131]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> script <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">document.getElementById(&#39;username&#39;).value=&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;document.getElementById(&#39;userTypePwd&#39;).value=&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>   <span class="token comment">//执行script脚本</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr><tr><td>script</td><td>string</td><td>√</td><td>x</td><td>执行script脚本</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[27]||(s[27]=[(0,a.eW)("对应柜面原SDK: MFC_IE.execute(id,script)")]))),_:1})]),s[132]||(s[132]=(0,a.Lk)("hr",null,null,-1)),s[133]||(s[133]=(0,a.Lk)("h3",{id:"_2-15-finish-执行销毁浏览器-注意-不允许在vue-beforedestroy中使用",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-15-finish-执行销毁浏览器-注意-不允许在vue-beforedestroy中使用"},[(0,a.Lk)("span",null,"2.15 finish --执行销毁浏览器 注意：不允许在vue beforeDestroy中使用")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[28]||(s[28]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[134]||(s[134]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[29]||(s[29]=[(0,a.eW)("对应柜面原SDK: MFC_IE.finish(id)")]))),_:1})]),s[135]||(s[135]=(0,a.Lk)("hr",null,null,-1)),s[136]||(s[136]=(0,a.Lk)("h3",{id:"_2-16-delay-finish-延迟执行销毁浏览器-注意-不允许在vue-beforedestroy中使用",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-16-delay-finish-延迟执行销毁浏览器-注意-不允许在vue-beforedestroy中使用"},[(0,a.Lk)("span",null,"2.16 delay_finish --延迟执行销毁浏览器 注意：不允许在vue beforeDestroy中使用")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[30]||(s[30]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[137]||(s[137]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> delayTime <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">//延时时间(毫秒)</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">delay_finish</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>delayTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr><tr><td>delayTime</td><td>int</td><td>√</td><td>x</td><td>延时时间(毫秒)</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[31]||(s[31]=[(0,a.eW)("对应柜面原SDK: MFC_IE.delay_finish(id,delayTime)")]))),_:1})]),s[138]||(s[138]=(0,a.Lk)("hr",null,null,-1)),s[139]||(s[139]=(0,a.Lk)("h3",{id:"_2-17-setvalue-为浏览器中某个dom对象设置值",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-17-setvalue-为浏览器中某个dom对象设置值"},[(0,a.Lk)("span",null,"2.17 setValue --为浏览器中某个dom对象设置值")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[32]||(s[32]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[140]||(s[140]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> componentId <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">;</span> <span class="token comment">//浏览器内操作dom元素的id</span></span>\n<span class="line"><span class="token keyword">let</span> value <span class="token operator">=</span><span class="token string">&quot;wang&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//浏览器内操作dom元素的value值</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>componentId<span class="token punctuation">,</span>id<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>浏览器内操作dom元素的id</td></tr><tr><td>componentId</td><td>string</td><td>√</td><td>x</td><td>当前内嵌组件id</td></tr><tr><td>value</td><td>string</td><td>√</td><td>x</td><td>浏览器内操作dom元素的value值</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[33]||(s[33]=[(0,a.eW)("对应柜面原SDK: MFC_IE.setValue(componentId,id,value)")]))),_:1})]),s[141]||(s[141]=(0,a.Lk)("hr",null,null,-1)),s[142]||(s[142]=(0,a.Lk)("h3",{id:"_2-18-submit-浏览器中提交表单",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-18-submit-浏览器中提交表单"},[(0,a.Lk)("span",null,"2.18 submit --浏览器中提交表单")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[34]||(s[34]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[143]||(s[143]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> formName <span class="token operator">=</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//浏览器内操作表单的dom元素名称</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span>  MfcIe<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>formName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr><tr><td>formName</td><td>string</td><td>√</td><td>x</td><td>浏览器内操作表单的dom元素名称</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[35]||(s[35]=[(0,a.eW)("对应柜面原SDK: MFC_IE.submit(id,formName)")]))),_:1})]),s[144]||(s[144]=(0,a.Lk)("hr",null,null,-1)),s[145]||(s[145]=(0,a.Lk)("h3",{id:"_2-19-submitbyid-根据浏览器中提交表单提交按钮dom-id来触发表单提交",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-19-submitbyid-根据浏览器中提交表单提交按钮dom-id来触发表单提交"},[(0,a.Lk)("span",null,"2.19 submitById --根据浏览器中提交表单提交按钮dom-id来触发表单提交")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[36]||(s[36]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[146]||(s[146]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> formId <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//浏览器内操作表单的dom元素Id</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span>  MfcIe<span class="token punctuation">.</span><span class="token function">submitById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>formId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr><tr><td>formId</td><td>string</td><td>√</td><td>x</td><td>浏览器内操作表单的dom元素Id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[37]||(s[37]=[(0,a.eW)("对应柜面原SDK: MFC_IE.submitById(id,formId)")]))),_:1})]),s[147]||(s[147]=(0,a.Lk)("hr",null,null,-1)),s[148]||(s[148]=(0,a.Lk)("h3",{id:"_2-20-gethtml-获取某个指定内嵌浏览器的全部html-返回的为html的base64串",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-20-gethtml-获取某个指定内嵌浏览器的全部html-返回的为html的base64串"},[(0,a.Lk)("span",null,"2.20 getHtml --获取某个指定内嵌浏览器的全部html(返回的为html的Base64串)")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[38]||(s[38]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[149]||(s[149]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcIe<span class="token punctuation">.</span><span class="token function">getHtml</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>success成功标识</td></tr><tr><td>res.htmlScript</td><td>string</td><td>html的base64字符串</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[39]||(s[39]=[(0,a.eW)("对应柜面原SDK: MFC_IE.getHtml(id)")]))),_:1})]),s[150]||(s[150]=(0,a.Lk)("hr",null,null,-1)),s[151]||(s[151]=(0,a.Lk)("p",null,"OleIe",-1)),s[152]||(s[152]=(0,a.Lk)("h3",{id:"_2-21-init-ole-ie初始化",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-21-init-ole-ie初始化"},[(0,a.Lk)("span",null,"2.21 init --OLE_IE初始化")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[40]||(s[40]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[153]||(s[153]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>获取到的handle</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[41]||(s[41]=[(0,a.eW)("对应柜面原SDK: OLE_IE.init(id)")]))),_:1})]),s[154]||(s[154]=(0,a.Lk)("hr",null,null,-1)),s[155]||(s[155]=(0,a.Lk)("h3",{id:"_2-22-seturl-给浏览器设置url地址",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-22-seturl-给浏览器设置url地址"},[(0,a.Lk)("span",null,"2.22 setUrl --给浏览器设置url地址")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[42]||(s[42]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[156]||(s[156]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&quot;http://www.baidu.com/&quot;</span> <span class="token comment">//url地址</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr><tr><td>url</td><td>string</td><td>√</td><td>x</td><td>设置的网址</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功的标识true字符串</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[43]||(s[43]=[(0,a.eW)("对应柜面原SDK: OLE_IE.setUrl(id,url)")]))),_:1})]),s[157]||(s[157]=(0,a.Lk)("hr",null,null,-1)),s[158]||(s[158]=(0,a.Lk)("h3",{id:"_2-23-execute-ole-ie执行浏览器脚本",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-23-execute-ole-ie执行浏览器脚本"},[(0,a.Lk)("span",null,"2.23 execute --OLE_IE执行浏览器脚本")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[44]||(s[44]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[159]||(s[159]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> script <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">document.getElementById(&#39;username&#39;).value=&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;document.getElementById(&#39;userTypePwd&#39;).value=&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr><tr><td>script</td><td>string</td><td>√</td><td>x</td><td>脚本命令</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[45]||(s[45]=[(0,a.eW)("对应柜面原SDK: OLE_IE.execute(id,script)")]))),_:1})]),s[160]||(s[160]=(0,a.Lk)("hr",null,null,-1)),s[161]||(s[161]=(0,a.Lk)("h3",{id:"_2-24-finish-ole-ie执行销毁浏览器",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-24-finish-ole-ie执行销毁浏览器"},[(0,a.Lk)("span",null,"2.24 finish --OLE_IE执行销毁浏览器")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[46]||(s[46]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[162]||(s[162]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功的标识</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[47]||(s[47]=[(0,a.eW)("对应柜面原SDK: OLE_IE.finish(id)")]))),_:1})]),s[163]||(s[163]=(0,a.Lk)("hr",null,null,-1)),s[164]||(s[164]=(0,a.Lk)("h3",{id:"_2-25-delay-finish-ole-ie延迟执行销毁浏览器",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-25-delay-finish-ole-ie延迟执行销毁浏览器"},[(0,a.Lk)("span",null,"2.25 delay_finish --OLE_IE延迟执行销毁浏览器")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[48]||(s[48]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[165]||(s[165]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> delayTime <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">//延时时间(毫秒)</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">delay_finish</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>delayTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr><tr><td>delayTime</td><td>int</td><td>√</td><td>x</td><td>延迟时间</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功的标识true或false</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[49]||(s[49]=[(0,a.eW)("对应柜面原SDK: OLE_IE.delay_finish(id,delayTime)")]))),_:1})]),s[166]||(s[166]=(0,a.Lk)("hr",null,null,-1)),s[167]||(s[167]=(0,a.Lk)("h3",{id:"_2-26-setvalue-ole-ie为浏览器中某个dom对象设置值",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-26-setvalue-ole-ie为浏览器中某个dom对象设置值"},[(0,a.Lk)("span",null,"2.26 setValue --OLE_IE为浏览器中某个dom对象设置值")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[50]||(s[50]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[168]||(s[168]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> componentId <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">;</span> <span class="token comment">//浏览器内操作dom元素的id</span></span>\n<span class="line"><span class="token keyword">let</span> value <span class="token operator">=</span><span class="token string">&quot;wang&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//浏览器内操作dom元素的value值</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>componentId<span class="token punctuation">,</span>id<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr><tr><td>componentId</td><td>string</td><td>√</td><td>x</td><td>电脑标识ID</td></tr><tr><td>value</td><td>string</td><td>√</td><td>x</td><td>value值</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[51]||(s[51]=[(0,a.eW)("对应柜面原SDK: OLE_IE.setValue(componentId,id,value)")]))),_:1})]),s[169]||(s[169]=(0,a.Lk)("hr",null,null,-1)),s[170]||(s[170]=(0,a.Lk)("h3",{id:"_2-27-submit-ole-ie浏览器中提交表单",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-27-submit-ole-ie浏览器中提交表单"},[(0,a.Lk)("span",null,"2.27 submit --OLE_IE浏览器中提交表单")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[52]||(s[52]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[171]||(s[171]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> formName <span class="token operator">=</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>formName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr><tr><td>formName</td><td>string</td><td>√</td><td>x</td><td>浏览器内操作表单的dom元素名称</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功的标识</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[53]||(s[53]=[(0,a.eW)("对应柜面原SDK: OLE_IE.submit(id,formName)")]))),_:1})]),s[172]||(s[172]=(0,a.Lk)("hr",null,null,-1)),s[173]||(s[173]=(0,a.Lk)("h3",{id:"_2-28-submitbyid-ole-ie根据浏览器中提交表单提交按钮dom-id来触发表单提交",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-28-submitbyid-ole-ie根据浏览器中提交表单提交按钮dom-id来触发表单提交"},[(0,a.Lk)("span",null,"2.28 submitById --OLE_IE根据浏览器中提交表单提交按钮dom-id来触发表单提交")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[54]||(s[54]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[174]||(s[174]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> formId <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">submitById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>formId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr><tr><td>formId</td><td>string</td><td>√</td><td>x</td><td>浏览器内操作表单的dom元素Id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功的标识</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[55]||(s[55]=[(0,a.eW)("对应柜面原SDK: OLE_IE.submitById(id,formId)")]))),_:1})]),s[175]||(s[175]=(0,a.Lk)("hr",null,null,-1)),s[176]||(s[176]=(0,a.Lk)("h3",{id:"_2-29-dologin-ole-ie浏览器登录操作",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-29-dologin-ole-ie浏览器登录操作"},[(0,a.Lk)("span",null,"2.29 doLogin --OLE_IE浏览器登录操作")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[56]||(s[56]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[177]||(s[177]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&quot;mail.agree.com.cn&quot;</span><span class="token punctuation">;</span> <span class="token comment">//登录url路径</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">doLogin</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr><tr><td>url</td><td>string</td><td>√</td><td>x</td><td>设置的网址</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>返回信息</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[57]||(s[57]=[(0,a.eW)("对应柜面原SDK: OLE_IE.doLogin(id,url)")]))),_:1})]),s[178]||(s[178]=(0,a.Lk)("hr",null,null,-1)),s[179]||(s[179]=(0,a.Lk)("h3",{id:"_2-30-dologout-ole-ie浏览器登出操作",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-30-dologout-ole-ie浏览器登出操作"},[(0,a.Lk)("span",null,"2.30 doLogout --OLE_IE浏览器登出操作")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[58]||(s[58]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[180]||(s[180]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&quot;mail.agree.com.cn&quot;</span><span class="token punctuation">;</span> <span class="token comment">//退出url路径</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">doLogout</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr><tr><td>url</td><td>string</td><td>√</td><td>x</td><td>设置的网址</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功的标识</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[59]||(s[59]=[(0,a.eW)("对应柜面原SDK: OLE_IE.doLogout(id,url)")]))),_:1})]),s[181]||(s[181]=(0,a.Lk)("hr",null,null,-1)),s[182]||(s[182]=(0,a.Lk)("h3",{id:"_2-31-gethtml-ole-ie获取某个指定内嵌浏览器的全部html-返回的为html的base64串",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-31-gethtml-ole-ie获取某个指定内嵌浏览器的全部html-返回的为html的base64串"},[(0,a.Lk)("span",null,"2.31 getHtml --OLE_IE获取某个指定内嵌浏览器的全部html(返回的为html的Base64串)")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[60]||(s[60]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[183]||(s[183]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_IE&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleIe<span class="token punctuation">.</span><span class="token function">getHtml</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功标识</td></tr><tr><td>res.htmlScript</td><td>string</td><td>html脚本</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[61]||(s[61]=[(0,a.eW)("对应柜面原SDK: OLE_IE.getHtml(id)")]))),_:1})]),s[184]||(s[184]=(0,a.Lk)("hr",null,null,-1)),s[185]||(s[185]=(0,a.Lk)("p",null,"OleFrame",-1)),s[186]||(s[186]=(0,a.Lk)("h3",{id:"_2-32-init-oleframe初始化操作",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-32-init-oleframe初始化操作"},[(0,a.Lk)("span",null,"2.32 init --oleFrame初始化操作")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[62]||(s[62]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[187]||(s[187]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_Frame&quot;</span><span class="token punctuation">;</span> </span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleFrame<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>获取到的handle</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[63]||(s[63]=[(0,a.eW)("对应柜面原SDK: OLE_Frame.init(id)")]))),_:1})]),s[188]||(s[188]=(0,a.Lk)("hr",null,null,-1)),s[189]||(s[189]=(0,a.Lk)("h3",{id:"_2-33-dispose-oleframe销毁操作",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-33-dispose-oleframe销毁操作"},[(0,a.Lk)("span",null,"2.33 dispose --oleFrame销毁操作")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[64]||(s[64]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[190]||(s[190]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_Frame&quot;</span><span class="token punctuation">;</span> </span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleFrame<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[65]||(s[65]=[(0,a.eW)("对应柜面原SDK: OLE_Frame.dispose(id)")]))),_:1})]),s[191]||(s[191]=(0,a.Lk)("hr",null,null,-1)),s[192]||(s[192]=(0,a.Lk)("h3",{id:"_2-34-openfile-打开文件",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-34-openfile-打开文件"},[(0,a.Lk)("span",null,"2.34 openFile --打开文件")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[66]||(s[66]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[193]||(s[193]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_Frame&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> filePath <span class="token operator">=</span> <span class="token string">&#39;C:/Users/CrownHwang/Desktop/test.docx&#39;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleFrame<span class="token punctuation">.</span><span class="token function">openFile</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr><tr><td>filePath</td><td>string</td><td>√</td><td>x</td><td>文件路径</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[67]||(s[67]=[(0,a.eW)("对应柜面原SDK: OLE_Frame.openFile")]))),_:1})]),s[194]||(s[194]=(0,a.Lk)("hr",null,null,-1)),s[195]||(s[195]=(0,a.Lk)("h3",{id:"_2-35-searchwords-查找文字",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-35-searchwords-查找文字"},[(0,a.Lk)("span",null,"2.35 searchWords --查找文字")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[68]||(s[68]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[196]||(s[196]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;OLE_Frame&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> words <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> OleFrame<span class="token punctuation">.</span><span class="token function">searchWords</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>words<span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>√</td><td>x</td><td>标识id</td></tr><tr><td>words</td><td>string</td><td>√</td><td>x</td><td>查找的文字</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[69]||(s[69]=[(0,a.eW)("对应柜面原SDK: OLE_Frame.searchWords")]))),_:1})]),s[197]||(s[197]=(0,a.Lk)("hr",null,null,-1)),s[198]||(s[198]=(0,a.Lk)("p",null,"MfcOcx",-1)),s[199]||(s[199]=(0,a.Lk)("h3",{id:"_2-36-init-mfc-ocx初始化操作",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-36-init-mfc-ocx初始化操作"},[(0,a.Lk)("span",null,"2.36 init --MFC_OCX初始化操作")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[70]||(s[70]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[200]||(s[200]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token string">&quot;MFC_OCX&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//当前内嵌组件id</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcOcx<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>String</td><td>√</td><td>x</td><td>标识ID</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>返回handle结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[71]||(s[71]=[(0,a.eW)("对应柜面原SDK: MFC_OCX.init(id)")]))),_:1})]),s[201]||(s[201]=(0,a.Lk)("hr",null,null,-1)),s[202]||(s[202]=(0,a.Lk)("h3",{id:"_2-37-finish-mfc-ocx销毁操作",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-37-finish-mfc-ocx销毁操作"},[(0,a.Lk)("span",null,"2.37 finish --MFC_OCX销毁操作")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[72]||(s[72]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[203]||(s[203]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcOcx<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>x</td><td>x</td><td>无</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>无</td><td>无</td><td>无</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[73]||(s[73]=[(0,a.eW)("对应柜面原SDK: MFC_OCX.finish()")]))),_:1})]),s[204]||(s[204]=(0,a.Lk)("hr",null,null,-1)),s[205]||(s[205]=(0,a.Lk)("h3",{id:"_2-38-retmsg-有返回值-发送信息。",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-38-retmsg-有返回值-发送信息。"},[(0,a.Lk)("span",null,"2.38 retMsg --有返回值，发送信息。")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[74]||(s[74]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[206]||(s[206]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> param <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//对应的参数</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcOcx<span class="token punctuation">.</span><span class="token function">retMsg</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>param</td><td>string</td><td>√</td><td>x</td><td>请求参数</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>执行结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[75]||(s[75]=[(0,a.eW)("对应柜面原SDK: MFC_OCX.retMsg(param)")]))),_:1})]),s[207]||(s[207]=(0,a.Lk)("hr",null,null,-1)),s[208]||(s[208]=(0,a.Lk)("h3",{id:"_2-39-noretmsg-无返回值-发送信息。",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-39-noretmsg-无返回值-发送信息。"},[(0,a.Lk)("span",null,"2.39 noRetMsg --无返回值，发送信息。")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[76]||(s[76]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[209]||(s[209]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> param <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//对应的参数</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> MfcOcx<span class="token punctuation">.</span><span class="token function">noRetMsg</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>param</td><td>string</td><td>√</td><td>x</td><td>请求参数</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>成功的标识</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[77]||(s[77]=[(0,a.eW)("对应柜面原SDK: MFC_OCX.noRetMsg(param)")]))),_:1})]),s[210]||(s[210]=(0,a.Lk)("hr",null,null,-1)),s[211]||(s[211]=(0,a.Lk)("p",null,"CefBrowser",-1)),s[212]||(s[212]=(0,a.Lk)("h3",{id:"_2-40-createcefbrowserhandle-创建cef并返回句柄",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-40-createcefbrowserhandle-创建cef并返回句柄"},[(0,a.Lk)("span",null,"2.40 createCefBrowserHandle --创建cef并返回句柄")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[78]||(s[78]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[213]||(s[213]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> tradeId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$getTradeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 标识ID</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> CefBrowser<span class="token punctuation">.</span><span class="token function">createCefBrowserHandle</span><span class="token punctuation">(</span>tradeId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>tradeId</td><td>String</td><td>x</td><td>x</td><td>标识ID</td></tr><tr><td>isLstOpen</td><td>String</td><td>x</td><td>x</td><td>是否监听url的打开和关闭</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>返回handle结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[79]||(s[79]=[(0,a.eW)("对应柜面原SDK: CefBrowser.createCefBrowserHandle(tradeId)")]))),_:1})]),s[214]||(s[214]=(0,a.Lk)("hr",null,null,-1)),s[215]||(s[215]=(0,a.Lk)("h3",{id:"_2-41-cefbrowserseturl-设置cef打开的url",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-41-cefbrowserseturl-设置cef打开的url"},[(0,a.Lk)("span",null,"2.41 cefBrowserSetUrl --设置cef打开的url")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[80]||(s[80]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[216]||(s[216]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// 句柄</span></span>\n<span class="line"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&#39;https://www.baidu.com/&#39;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> CefBrowser<span class="token punctuation">.</span><span class="token function">cefBrowserSetUrl</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>✔</td><td>x</td><td>需要设置的窗口的句柄</td></tr><tr><td>url</td><td>String</td><td>✔</td><td>x</td><td>需要设置的url</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>返回结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[81]||(s[81]=[(0,a.eW)("对应柜面原SDK: CefBrowser.cefBrowserSetUrl(handle, url)")]))),_:1})]),s[217]||(s[217]=(0,a.Lk)("hr",null,null,-1)),s[218]||(s[218]=(0,a.Lk)("h3",{id:"_2-42-cefbrowsergeturl-获取cef打开的url",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-42-cefbrowsergeturl-获取cef打开的url"},[(0,a.Lk)("span",null,"2.42 cefBrowserGetUrl --获取cef打开的url")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[82]||(s[82]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[219]||(s[219]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// 句柄</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> CefBrowser<span class="token punctuation">.</span><span class="token function">cefBrowserGetUrl</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>✔</td><td>x</td><td>需要获取url的窗口的句柄</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>返回url结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[83]||(s[83]=[(0,a.eW)("对应柜面原SDK: CefBrowser.cefBrowserGetUrl(handle)")]))),_:1})]),s[220]||(s[220]=(0,a.Lk)("hr",null,null,-1)),s[221]||(s[221]=(0,a.Lk)("h3",{id:"_2-43-cefbrowserclose-关闭cef",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-43-cefbrowserclose-关闭cef"},[(0,a.Lk)("span",null,"2.43 cefBrowserClose --关闭cef")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[84]||(s[84]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[222]||(s[222]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// 句柄</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> CefBrowser<span class="token punctuation">.</span><span class="token function">cefBrowserClose</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>✔</td><td>x</td><td>需要关闭的窗口的句柄</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>返回结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[85]||(s[85]=[(0,a.eW)("对应柜面原SDK: CefBrowser.cefBrowserClose(handle)")]))),_:1})]),s[223]||(s[223]=(0,a.Lk)("hr",null,null,-1)),s[224]||(s[224]=(0,a.Lk)("h3",{id:"_2-44-cefbrowsersyncexecutescript-cef执行脚本",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-44-cefbrowsersyncexecutescript-cef执行脚本"},[(0,a.Lk)("span",null,"2.44 cefBrowserSyncExecuteScript --cef执行脚本")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[86]||(s[86]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[225]||(s[225]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// 句柄</span></span>\n<span class="line"><span class="token keyword">let</span> script <span class="token operator">=</span> <span class="token string">&#39;window.open(&quot;https://www.baidu.com/&quot;)&#39;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> CefBrowser<span class="token punctuation">.</span><span class="token function">cefBrowserSyncExecuteScript</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> script<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>✔</td><td>x</td><td>需要执行脚本的窗口的句柄</td></tr><tr><td>script</td><td>String</td><td>✔</td><td>x</td><td>执行的脚本内容</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>返回结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[87]||(s[87]=[(0,a.eW)("对应柜面原SDK: CefBrowser.cefBrowserSyncExecuteScript(handle, script)")]))),_:1})]),s[226]||(s[226]=(0,a.Lk)("hr",null,null,-1)),s[227]||(s[227]=(0,a.Lk)("h3",{id:"_2-45-cefbrowserasyncexecutescript-cef执行脚本",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#_2-45-cefbrowserasyncexecutescript-cef执行脚本"},[(0,a.Lk)("span",null,"2.45 cefBrowserAsyncExecuteScript --cef执行脚本")])],-1)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[88]||(s[88]=[(0,a.eW)("支持柜面渠道")]))),_:1})]),s[228]||(s[228]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// 句柄</span></span>\n<span class="line"><span class="token keyword">let</span> script <span class="token operator">=</span> <span class="token string">&#39;window.open(&quot;https://www.baidu.com/&quot;)&#39;</span></span>\n<span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> CefBrowser<span class="token punctuation">.</span><span class="token function">cefBrowserAsyncExecuteScript</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> script<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数列表:</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>必填参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>✔</td><td>x</td><td>需要执行脚本的窗口的句柄</td></tr><tr><td>script</td><td>String</td><td>✔</td><td>x</td><td>执行的脚本内容</td></tr></tbody></table><ul><li>返回值: <code>Object</code></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>res.result</td><td>string</td><td>返回结果</td></tr></tbody></table>',5)),(0,a.Lk)("blockquote",null,[(0,a.bF)(n,{color:"red",style:{"font-weight":"bold"}},{default:(0,a.k6)((()=>s[89]||(s[89]=[(0,a.eW)("对应柜面原SDK: CefBrowser.cefBrowserAsyncExecuteScript(handle, script)")]))),_:1})]),s[229]||(s[229]=(0,a.Lk)("hr",null,null,-1))])}]]),d=JSON.parse('{"path":"/ABX5/%E5%89%8D%E7%AB%AF/sdk/ab-plugin-embed.html","title":"ab-plugin-embed @前端内嵌类组件","lang":"en-US","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"1. 引入","slug":"_1-引入","link":"#_1-引入","children":[]},{"level":2,"title":"2. 使用","slug":"_2-使用","link":"#_2-使用","children":[]},{"level":2,"title":"Embed","slug":"embed","link":"#embed","children":[{"level":3,"title":"2.1 creatEmbedFrame --76版创建内嵌画面","slug":"_2-1-creatembedframe-76版创建内嵌画面","link":"#_2-1-creatembedframe-76版创建内嵌画面","children":[]},{"level":3,"title":"2.2 embeddedRefresh --刷新内嵌画面的大小和位置","slug":"_2-2-embeddedrefresh-刷新内嵌画面的大小和位置","link":"#_2-2-embeddedrefresh-刷新内嵌画面的大小和位置","children":[]},{"level":3,"title":"2.3 embeddedDestroy --销毁指定的内嵌画面","slug":"_2-3-embeddeddestroy-销毁指定的内嵌画面","link":"#_2-3-embeddeddestroy-销毁指定的内嵌画面","children":[]},{"level":3,"title":"2.4 embeddedVisible --显示指定内嵌画面","slug":"_2-4-embeddedvisible-显示指定内嵌画面","link":"#_2-4-embeddedvisible-显示指定内嵌画面","children":[]},{"level":3,"title":"2.5 embedVisibleScreenshot --隐藏对应的内嵌画面","slug":"_2-5-embedvisiblescreenshot-隐藏对应的内嵌画面","link":"#_2-5-embedvisiblescreenshot-隐藏对应的内嵌画面","children":[]},{"level":3,"title":"2.6 getVisibleStatus --获取内嵌窗体的状态","slug":"_2-6-getvisiblestatus-获取内嵌窗体的状态","link":"#_2-6-getvisiblestatus-获取内嵌窗体的状态","children":[]},{"level":3,"title":"2.7 HideWindow --隐藏传入句柄对应的窗口","slug":"_2-7-hidewindow-隐藏传入句柄对应的窗口","link":"#_2-7-hidewindow-隐藏传入句柄对应的窗口","children":[]},{"level":3,"title":"2.8 screenShoot --内嵌截图","slug":"_2-8-screenshoot-内嵌截图","link":"#_2-8-screenshoot-内嵌截图","children":[]},{"level":3,"title":"2.9 init --发送请求初始化","slug":"_2-9-init-发送请求初始化","link":"#_2-9-init-发送请求初始化","children":[]},{"level":3,"title":"2.10 refreshUrl --网页刷新","slug":"_2-10-refreshurl-网页刷新","link":"#_2-10-refreshurl-网页刷新","children":[]},{"level":3,"title":"2.11 getLocationURL --获取当前浏览器url地址","slug":"_2-11-getlocationurl-获取当前浏览器url地址","link":"#_2-11-getlocationurl-获取当前浏览器url地址","children":[]},{"level":3,"title":"2.12 setSilent --设置ie是否禁用警告窗口","slug":"_2-12-setsilent-设置ie是否禁用警告窗口","link":"#_2-12-setsilent-设置ie是否禁用警告窗口","children":[]},{"level":3,"title":"2.13 setUrl --设置ie浏览器地址","slug":"_2-13-seturl-设置ie浏览器地址","link":"#_2-13-seturl-设置ie浏览器地址","children":[]},{"level":3,"title":"2.14 execute --执行浏览器脚本","slug":"_2-14-execute-执行浏览器脚本","link":"#_2-14-execute-执行浏览器脚本","children":[]},{"level":3,"title":"2.15 finish --执行销毁浏览器 注意：不允许在vue beforeDestroy中使用","slug":"_2-15-finish-执行销毁浏览器-注意-不允许在vue-beforedestroy中使用","link":"#_2-15-finish-执行销毁浏览器-注意-不允许在vue-beforedestroy中使用","children":[]},{"level":3,"title":"2.16 delay_finish --延迟执行销毁浏览器 注意：不允许在vue beforeDestroy中使用","slug":"_2-16-delay-finish-延迟执行销毁浏览器-注意-不允许在vue-beforedestroy中使用","link":"#_2-16-delay-finish-延迟执行销毁浏览器-注意-不允许在vue-beforedestroy中使用","children":[]},{"level":3,"title":"2.17 setValue --为浏览器中某个dom对象设置值","slug":"_2-17-setvalue-为浏览器中某个dom对象设置值","link":"#_2-17-setvalue-为浏览器中某个dom对象设置值","children":[]},{"level":3,"title":"2.18 submit --浏览器中提交表单","slug":"_2-18-submit-浏览器中提交表单","link":"#_2-18-submit-浏览器中提交表单","children":[]},{"level":3,"title":"2.19 submitById --根据浏览器中提交表单提交按钮dom-id来触发表单提交","slug":"_2-19-submitbyid-根据浏览器中提交表单提交按钮dom-id来触发表单提交","link":"#_2-19-submitbyid-根据浏览器中提交表单提交按钮dom-id来触发表单提交","children":[]},{"level":3,"title":"2.20 getHtml --获取某个指定内嵌浏览器的全部html(返回的为html的Base64串)","slug":"_2-20-gethtml-获取某个指定内嵌浏览器的全部html-返回的为html的base64串","link":"#_2-20-gethtml-获取某个指定内嵌浏览器的全部html-返回的为html的base64串","children":[]},{"level":3,"title":"2.21 init --OLE_IE初始化","slug":"_2-21-init-ole-ie初始化","link":"#_2-21-init-ole-ie初始化","children":[]},{"level":3,"title":"2.22 setUrl --给浏览器设置url地址","slug":"_2-22-seturl-给浏览器设置url地址","link":"#_2-22-seturl-给浏览器设置url地址","children":[]},{"level":3,"title":"2.23 execute --OLE_IE执行浏览器脚本","slug":"_2-23-execute-ole-ie执行浏览器脚本","link":"#_2-23-execute-ole-ie执行浏览器脚本","children":[]},{"level":3,"title":"2.24 finish --OLE_IE执行销毁浏览器","slug":"_2-24-finish-ole-ie执行销毁浏览器","link":"#_2-24-finish-ole-ie执行销毁浏览器","children":[]},{"level":3,"title":"2.25 delay_finish --OLE_IE延迟执行销毁浏览器","slug":"_2-25-delay-finish-ole-ie延迟执行销毁浏览器","link":"#_2-25-delay-finish-ole-ie延迟执行销毁浏览器","children":[]},{"level":3,"title":"2.26 setValue --OLE_IE为浏览器中某个dom对象设置值","slug":"_2-26-setvalue-ole-ie为浏览器中某个dom对象设置值","link":"#_2-26-setvalue-ole-ie为浏览器中某个dom对象设置值","children":[]},{"level":3,"title":"2.27 submit --OLE_IE浏览器中提交表单","slug":"_2-27-submit-ole-ie浏览器中提交表单","link":"#_2-27-submit-ole-ie浏览器中提交表单","children":[]},{"level":3,"title":"2.28 submitById --OLE_IE根据浏览器中提交表单提交按钮dom-id来触发表单提交","slug":"_2-28-submitbyid-ole-ie根据浏览器中提交表单提交按钮dom-id来触发表单提交","link":"#_2-28-submitbyid-ole-ie根据浏览器中提交表单提交按钮dom-id来触发表单提交","children":[]},{"level":3,"title":"2.29 doLogin --OLE_IE浏览器登录操作","slug":"_2-29-dologin-ole-ie浏览器登录操作","link":"#_2-29-dologin-ole-ie浏览器登录操作","children":[]},{"level":3,"title":"2.30 doLogout --OLE_IE浏览器登出操作","slug":"_2-30-dologout-ole-ie浏览器登出操作","link":"#_2-30-dologout-ole-ie浏览器登出操作","children":[]},{"level":3,"title":"2.31 getHtml --OLE_IE获取某个指定内嵌浏览器的全部html(返回的为html的Base64串)","slug":"_2-31-gethtml-ole-ie获取某个指定内嵌浏览器的全部html-返回的为html的base64串","link":"#_2-31-gethtml-ole-ie获取某个指定内嵌浏览器的全部html-返回的为html的base64串","children":[]},{"level":3,"title":"2.32 init --oleFrame初始化操作","slug":"_2-32-init-oleframe初始化操作","link":"#_2-32-init-oleframe初始化操作","children":[]},{"level":3,"title":"2.33 dispose --oleFrame销毁操作","slug":"_2-33-dispose-oleframe销毁操作","link":"#_2-33-dispose-oleframe销毁操作","children":[]},{"level":3,"title":"2.34 openFile --打开文件","slug":"_2-34-openfile-打开文件","link":"#_2-34-openfile-打开文件","children":[]},{"level":3,"title":"2.35 searchWords --查找文字","slug":"_2-35-searchwords-查找文字","link":"#_2-35-searchwords-查找文字","children":[]},{"level":3,"title":"2.36 init --MFC_OCX初始化操作","slug":"_2-36-init-mfc-ocx初始化操作","link":"#_2-36-init-mfc-ocx初始化操作","children":[]},{"level":3,"title":"2.37 finish --MFC_OCX销毁操作","slug":"_2-37-finish-mfc-ocx销毁操作","link":"#_2-37-finish-mfc-ocx销毁操作","children":[]},{"level":3,"title":"2.38 retMsg --有返回值，发送信息。","slug":"_2-38-retmsg-有返回值-发送信息。","link":"#_2-38-retmsg-有返回值-发送信息。","children":[]},{"level":3,"title":"2.39 noRetMsg --无返回值，发送信息。","slug":"_2-39-noretmsg-无返回值-发送信息。","link":"#_2-39-noretmsg-无返回值-发送信息。","children":[]},{"level":3,"title":"2.40 createCefBrowserHandle --创建cef并返回句柄","slug":"_2-40-createcefbrowserhandle-创建cef并返回句柄","link":"#_2-40-createcefbrowserhandle-创建cef并返回句柄","children":[]},{"level":3,"title":"2.41 cefBrowserSetUrl --设置cef打开的url","slug":"_2-41-cefbrowserseturl-设置cef打开的url","link":"#_2-41-cefbrowserseturl-设置cef打开的url","children":[]},{"level":3,"title":"2.42 cefBrowserGetUrl --获取cef打开的url","slug":"_2-42-cefbrowsergeturl-获取cef打开的url","link":"#_2-42-cefbrowsergeturl-获取cef打开的url","children":[]},{"level":3,"title":"2.43 cefBrowserClose --关闭cef","slug":"_2-43-cefbrowserclose-关闭cef","link":"#_2-43-cefbrowserclose-关闭cef","children":[]},{"level":3,"title":"2.44 cefBrowserSyncExecuteScript --cef执行脚本","slug":"_2-44-cefbrowsersyncexecutescript-cef执行脚本","link":"#_2-44-cefbrowsersyncexecutescript-cef执行脚本","children":[]},{"level":3,"title":"2.45 cefBrowserAsyncExecuteScript --cef执行脚本","slug":"_2-45-cefbrowserasyncexecutescript-cef执行脚本","link":"#_2-45-cefbrowserasyncexecutescript-cef执行脚本","children":[]}]}],"git":{"updatedTime":1727145923000,"contributors":[{"name":"wangaoqi","email":"wangaoqi@agree.com.cn","commits":1}]},"filePathRelative":"ABX5/前端/sdk/ab-plugin-embed.md"}')}}]);